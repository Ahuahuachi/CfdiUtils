version: "{branch}-{build}"
build: false
platform: x64
clone_folder: c:\projects\project
clone_depth: 1

cache:
    - C:\ProgramData\chocolatey\bin -> .appveyor.yml
    - C:\ProgramData\chocolatey\lib -> .appveyor.yml
    - C:\tools\composer -> .appveyor.yml
    - '%LOCALAPPDATA%\Composer\files -> composer.json'

## Build matrix for lowest and highest possible targets
environment:
    matrix:
        - php: 7.0
        - php: 7.1
        - php: 7.2
        - php: 7.3

init:
    - SET PATH=%PATH%;C:\OpenSSL-v111-Win64\bin;c:\tools\php;C:\tools\composer
    - SET COMPOSER_NO_INTERACTION=1
    - SET ANSICON="121x90 (121x90)"
    - SET saxonb-path=C:\ProgramData\chocolatey\bin\SaxonHE\bin\Transform.exe

## Install PHP and composer, and run the appropriate composer command
install:
    # check openssl exists and run from PATH
    - openssl version
    # php
    - ps: |
          if (! (Test-Path c:\tools\php)) {
              # Retrieve version from choco using php environment variable
              $php_install_version = (( `
                  choco search php --exact --all-versions -r `
                      | Select-String -Pattern $env:php `
                      | Sort-Object { [version]($_ -Split '\|' | Select-Object -Last 1) } -Descending `
                      | Select-Object -First 1 `
                  ) -Replace '[php|]', '')

              # install using choco
              appveyor-retry cinst --ignore-checksums --package-parameters='"/ThreadSafe ""/InstallDir:C:\tools\php"""' `
                  -y php --version $php_install_version

              # setup c:\tools\php\php.ini
              Copy-Item -Path c:\tools\php\php.ini-production -Destination c:\tools\php\php.ini
              Add-Content c:\tools\php\php.ini "; PHP Custom config" `
                  + "date.timezone=UTC`n" `
                  + "extension_dir=ext`n" `
                  + "memory_limit=1G`n" `
                  + "extension=php_openssl`n" `
                  + "extension=php_mbstring`n" `
                  + "extension=php_fileinfo`n" `
                  + "extension=php_curl`n" `
                  + "extension=php_xsl`n" `
                  + "extension=php_soap`n"
          }
    # composer
    - ps: |
          if (! (Test-Path c:\tools\composer\composer.phar)) {
              New-Item -ItemType Directory -Force -Path c:\tools\composer
              appveyor-retry appveyor DownloadFile https://getcomposer.org/composer.phar -Filename C:\tools\composer\composer.phar
              Set-Content -Path 'C:\tools\composer\composer.bat' -Value ('@php C:\tools\composer\composer.phar %*')
          }
    # update composer
    - appveyor-retry composer self-update --no-progress --no-interaction
    # saxonb
    - ps: |
          if (! (Test-Path C:\ProgramData\chocolatey\bin\SaxonHE\bin\Transform.exe)) {
              appveyor-retry cinst --ignore-checksums -y saxonhe
          }

    # install project
    - cd c:\projects\project
    - appveyor-retry composer install --no-progress --no-interaction --prefer-dist
    - dir vendor\bin

## Run the actual test
test_script:
    - cd c:\projects\project
    - mkdir build
    - vendor\bin\phplint
    - vendor\bin\phpcs -sp src tests
    - vendor\bin\php-cs-fixer fix --dry-run --verbose
    - vendor\bin\phpunit --testdox --verbose
    - vendor\bin\phpstan.phar.bat --no-progress analyse --level max src tests
